<?php

class MotdController extends Controller
{
	public function actionCreate()
	{
		$model=new Motd;
		if(isset($_POST['Motd']))
		{
			//!$model->attributes=$_POST['Post'];
			$model->attributes=$_POST['Motd'];
			if($model->save())
				$this->redirect(array('view','id'=>$model->id));
			/*
			$model->category='gogo';
			*/
		}

		$this->render('create',array(
			'model'=>$model,
		));
	}

	public function actionIndex()
	{
		/*
		$dataProvider=new CActiveDataProvider('Motd');

		$this->render('index',array(
			'dataProvider'=>$dataProvider,
		));
		*/
		$criteria=new CDbCriteria(array(
			'order'=>'time DESC',
		));
		$dataProvider=new CActiveDataProvider('Motd', array(
			'pagination'=>array(
				'pageSize'=>Yii::app()->params['postsPerPage'],
			),
			'criteria'=>$criteria,
		));
		$this->render('index',array(
			'dataProvider'=>$dataProvider,
		));
	}
	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionView($id)
	{
		$this->render('view',array(
			'model'=>$this->loadModel($id),
		));
	}
	public function loadModel($id)
	{
		$model=Motd::model()->findByPk($id);
		if($model===null)
			throw new CHttpException(404,'The requested page does not exist.');
		return $model;
	}

	// Uncomment the following methods and override them if needed
	/*
	public function filters()
	{
		// return the filter configuration for this controller, e.g.:
		return array(
			'inlineFilterName',
			array(
				'class'=>'path.to.FilterClass',
				'propertyName'=>'propertyValue',
			),
		);
	}

	public function actions()
	{
		// return external action classes, e.g.:
		return array(
			'action1'=>'path.to.ActionClass',
			'action2'=>array(
				'class'=>'path.to.AnotherActionClass',
				'propertyName'=>'propertyValue',
			),
		);
	}
	*/
}
